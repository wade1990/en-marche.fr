parameters:
    env(RABBITMQ_DSN): 'amqp://%env(RABBITMQ_USER)%:%env(RABBITMQ_PASSWORD)%@%env(RABBITMQ_HOST)%:%env(RABBITMQ_PORT)%/%2f?lazy=0&connection_timeout=10&read_write_timeout=10&heartbeat=5'

    # Configure middleware of bus, this parameter will be removed from the container after that MessengerPass is passed
    messenger.middleware:
        - { id: send_message }
        - { id: handle_message }

services:
    _defaults:
        autoconfigure: true
        autowire: true
        public: false

    # Message Bus with its alias
    messenger:
        class: Symfony\Component\Messenger\MessageBus
        tags: [messenger.bus]
        arguments: [[]]
    Symfony\Component\Messenger\MessageBusInterface: '@messenger'

    messenger.middleware.handle_message:
        class: Symfony\Component\Messenger\Middleware\HandleMessageMiddleware
        arguments: [[]]

    # Middleware, used in the parameter `messenger.middleware`
    messenger.middleware.send_message:
        class: Symfony\Component\Messenger\Middleware\SendMessageMiddleware

    # Message Serializer with its alias
    Symfony\Component\Messenger\Transport\Serialization\Serializer:
        arguments:
            $serializer: '@Symfony\Component\Serializer\SerializerInterface'

    Symfony\Component\Messenger\Transport\Serialization\SerializerInterface: '@Symfony\Component\Messenger\Transport\Serialization\Serializer'

    # Transport Factory - global
    Symfony\Component\Messenger\Transport\TransportFactory:
        arguments: [!tagged messenger.transport_factory]

    # Transport Factory - AMQP transport
    Symfony\Component\Messenger\Transport\AmqpExt\AmqpTransportFactory:
        tags: [messenger.transport_factory]
        arguments:
            $debug: '%kernel.debug%'

    # Transport AMQP
    messenger.transport.amqp:
        class: Symfony\Component\Messenger\Transport\TransportInterface
        factory: 'Symfony\Component\Messenger\Transport\TransportFactory:createTransport'
        tags:
            - { name: messenger.receiver, alias: amqp }
        arguments:
            $dsn: '%env(RABBITMQ_DSN)%'
            $options: []

    # Senders Locator witch defines a mapping [MessageClass => [alias: service]]
    messenger.transport.senders_locator:
        class: Symfony\Component\Messenger\Transport\Sender\SendersLocator
        arguments:
            $senders:
                AppBundle\Messenger\Message\AsyncMessageInterface: { amqp: '@messenger.transport.amqp' }

    Symfony\Component\Messenger\Transport\Sender\SendersLocatorInterface: '@messenger.transport.senders_locator'

    # Receiver command
    console.command.messenger_consume_messages:
        class: Symfony\Component\Messenger\Command\ConsumeMessagesCommand
        arguments:
            -
            - '@messenger.receiver_locator'
            - '@Psr\Log\LoggerInterface'
            - []
            - []

    messenger.receiver_locator:
        tags: [container.service_locator]
        arguments: [[]]

    AppBundle\Messenger\:
        resource: '../../src/Messenger/*'
        exclude: '../../src/Messenger/{Message}'
